<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/batch 
        http://www.springframework.org/schema/batch/spring-batch.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    
    <import resource="configuration/northamericaImports-common.xml"/>
    
    <job id="northamericaImportsJsonFileStoreJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="northamericaImportsJsonFileStoreStep1">
            <tasklet>
                <chunk reader="aggregateItemReader" processor="aggregateItemProcessor" writer="compositeItemWriter" 
                    commit-interval="${batch.northamerica_imports.json.commit-interval:1000}"
                    skip-limit="${batch.northamerica_imports.json.skip-limit:1}">
                    <skippable-exception-classes>
                        <include class="org.springframework.batch.item.file.FlatFileParseException"/>
                    </skippable-exception-classes>
                    <streams>
                        <stream ref="fileItemReader"/>
                        <stream ref="jsonFileItemWriter:A"/>
                        <stream ref="jsonFileItemWriter:D"/>
                        <stream ref="jsonFileItemWriter:N"/>
                        <stream ref="jsonFileItemWriter:E"/>
                    </streams>
                </chunk>
            </tasklet>
        </step>
        <listeners>
            <listener ref="notificationExecutionsListener"/>
        </listeners>
    </job>
    
    <bean id="compositeItemWriter" class="org.springframework.batch.item.support.CompositeItemWriter">
        <property name="delegates">
            <list>
                <ref bean="jsonFileItemWriter"/>
                <ref bean="compositeJsonFileItemWriter"/>
            </list>
        </property>
    </bean>
    
    <bean id="compositeJsonFileItemWriter" class="org.springframework.batch.item.support.ClassifierCompositeItemWriter">
        <property name="classifier">
            <bean class="org.springframework.classify.BackToBackPatternClassifier">
                <property name="routerDelegate">
                    <bean class="cn.tendata.batch.item.SpelEvaluationItemClassifier">
                        <constructor-arg value="#root['RecordStatusIndicator_10']"/>
                    </bean>
                </property>
                <property name="matcherMap">
                    <map>
                        <entry key="A" value-ref="jsonFileItemWriter:A"/>
                        <entry key="D" value-ref="jsonFileItemWriter:D"/>
                        <entry key="N" value-ref="jsonFileItemWriter:N"/>
                        <entry key="*" value-ref="jsonFileItemWriter:E"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>
    
    <bean id="abstractJsonFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" abstract="true">
        <property name="lineAggregator">
            <bean class="cn.tendata.batch.item.file.transform.Map2JSONLineAggregator" />
        </property>
    </bean>
    
    <bean id="jsonFileItemWriter" parent="abstractJsonFileItemWriter" scope="step">
        <property name="resource" 
            value="#{T(cn.tendata.batch.util.JobParameterUtils).getOutputPathToFile(jobParameters, '.json')}" />
    </bean>
    
    <bean id="jsonFileItemWriter:A" parent="abstractJsonFileItemWriter" scope="step">
        <property name="resource" 
            value="#{T(cn.tendata.batch.util.JobParameterUtils).getOutputPathToFile(jobParameters, '_A.json')}" />
    </bean>
    
    <bean id="jsonFileItemWriter:D" parent="abstractJsonFileItemWriter" scope="step">
        <property name="resource" 
            value="#{T(cn.tendata.batch.util.JobParameterUtils).getOutputPathToFile(jobParameters, '_D.json')}" />
    </bean>
    
    <bean id="jsonFileItemWriter:N" parent="abstractJsonFileItemWriter" scope="step">
        <property name="resource" 
            value="#{T(cn.tendata.batch.util.JobParameterUtils).getOutputPathToFile(jobParameters, '_N.json')}" />
    </bean>
    
    <bean id="jsonFileItemWriter:E" parent="abstractJsonFileItemWriter" scope="step">
        <property name="resource" 
            value="#{T(cn.tendata.batch.util.JobParameterUtils).getOutputPathToFile(jobParameters, '_E.json')}" />
    </bean>
</beans>