<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:int="http://www.springframework.org/schema/integration"
    xmlns:int-file="http://www.springframework.org/schema/integration/file"
    xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
    xsi:schemaLocation="
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/integration
        http://www.springframework.org/schema/integration/spring-integration.xsd
        http://www.springframework.org/schema/integration/file
        http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
        http://www.springframework.org/schema/integration/stream
        http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <int:poller default="true" fixed-rate="${batch.integration.poller.fixed-rate:10000}"/>

    <int:channel id="webpower-batch-input-files"/>

    <int:channel id="webpower-batch-job-requests"/>

    <int:channel id="webpower--batch-job-statuses">
        <int:queue capacity="${batch.integration.channel.batch-job-statuses.queue.capacity:10}"/>
    </int:channel>

    <bean id="webpowerFilenameRegexFilter" class="org.springframework.integration.file.config.FileListFilterFactoryBean">
        <property name="filter">
            <bean class="org.springframework.integration.file.filters.RegexPatternFileListFilter">
                <constructor-arg
                    value="#{T(java.util.regex.Pattern).compile('${batch.input.file.pattern:^.*\.csv$}', T(java.util.regex.Pattern).CASE_INSENSITIVE)}" />
            </bean>
        </property>
        <property name="preventDuplicates" value="${batch.input.file.prevent-duplicates:true}"/>
    </bean>

    <bean id="webpowerDirectoryScanner" class="org.springframework.integration.file.WatchServiceDirectoryScanner">
        <constructor-arg>
            <bean class="cn.tendata.batch.support.ResourceFilePathFactoryBean">
                <property name="resource" value="${batch.webpower.input.directory}"/>
            </bean>
        </constructor-arg>
        <property name="filter" ref="webpowerFilenameRegexFilter"/>
        <property name="autoStartup" value="${batch.input.directory.scanner.auto-startup:true}" />
    </bean>


    <int-file:inbound-channel-adapter id="webpowerFilesIn" directory="${batch.webpower.input.directory}"
        scanner="webpowerDirectoryScanner" channel="webpower-batch-input-files">
        <int:poller trigger="webpowerFilesInPeriodicTrigger"/>
    </int-file:inbound-channel-adapter>

    <bean id="webpowerFilesInPeriodicTrigger" class="org.springframework.scheduling.support.PeriodicTrigger">
        <constructor-arg value="${batch.integration.channel.batch-input-files.poller.periodic-trigger.period:5000}" />
        <property name="initialDelay" value="${batch.integration.channel.batch-input-files.poller.periodic-trigger.initial-delay:10000}"/>
    </bean>

    <int:transformer id="webpowerRepareJobLaunchRequest" input-channel="webpower-batch-input-files" output-channel="webpower-batch-job-requests">
        <bean class="cn.tendata.batch.integration.FileMessageToJobRequestTransformer">
            <property name="jobRegistry" ref="jobRegistry" />
            <property name="jobPropertiesResolver">
                <bean class="cn.tendata.batch.integration.support.ConfigFileMessageJobPropertiesResolver">
                    <property name="configProps">
                        <util:properties location="${batch.integration.job.properties.location:classpath:/}batch-webpower-integration-job.properties"/>
                    </property>
                </bean>
            </property>
            <property name="inputDirectory" value="${batch.webpower.input.directory}" />
            <property name="outputDirectory" value="${batch.webpower.output.directory}" />
        </bean>
    </int:transformer>

    <int:service-activator id="webpoweRunJob" method="launch" input-channel="webpower-batch-job-requests" output-channel="webpower--batch-job-statuses">
        <bean class="org.springframework.batch.integration.launch.JobLaunchingMessageHandler">
            <constructor-arg ref="jobLauncher"/>
        </bean>
    </int:service-activator>

    <int:logging-channel-adapter channel="webpower--batch-job-statuses"/>

    <int:gateway id="notificationExecutionsListener"
        service-interface="org.springframework.batch.core.JobExecutionListener"
        default-request-channel="webpower-batch-job-executions"/>

    <int:channel id="webpower-batch-job-executions"/>

    <int:recipient-list-router id="executionsRouter" input-channel="webpower-batch-job-executions" default-output-channel="nullChannel">
        <int:recipient channel="webpower-batch-job-restarts"
            selector-expression="payload.Status.toString().equals('FAILED')"/>
        <int:recipient channel="webpower-batch-job-completes"
            selector-expression="payload.Status.toString().equals('COMPLETED')"/>
    </int:recipient-list-router>

    <int:channel id="webpower-batch-job-restarts" />

    <int:chain input-channel="webpower-batch-job-restarts">
        <int:delayer id="wait5sec" default-delay="5000"/>
        <int:service-activator>
            <bean class="cn.tendata.batch.integration.JobRestart"/>
        </int:service-activator>
    </int:chain>

    <int:channel id="webpower-batch-job-completes" />

    <int:chain input-channel="webpower-batch-job-completes" output-channel="webpowerFilesOut">
        <int:transformer id="webpowerPrepareCompleteFile">
            <bean class="cn.tendata.batch.integration.JobExecutionToFileTransformer" />
        </int:transformer>
        <int:header-enricher>
            <int:header name="completePathToDir"
                expression="T(cn.tendata.batch.integration.util.FilePathUtils).concatFolders('${batch.webpower.complete.directory}',
                    '${batch.webpower.complete.directory}', payload)" />
        </int:header-enricher>
    </int:chain>

    <int-file:outbound-channel-adapter id="webpowerFilesOut"
        directory-expression="headers.completePathToDir"
        delete-source-files="${batch.complete.delete-source-files:true}" />
</beans>